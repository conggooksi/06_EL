=====================================
EL.JSTL : 지금부터 스프링까지, 회사에서도 쭉 사용
front-end 부분
=====================================

EL이란
  - 표현 언어 이다
  - ${}
  - JSP2.0부터 추가되었다
  - 새로운 스크립트 언어로써 JSP의 기본 문법을 보완하는 역할을 한다
  
  표현식 <%= %>
  표현언어 ${}
  
  ■ JSP의 4가지 내장 객체
    page, request, session, application
  
  ■ EL에서 제공된 것은 
    pageScope, requestScope, sessionScope, applicationScope
  
  ■ EL은 Collection 객체에 대한 접근 방법을 제공한다
    Vector, List, ArrayList, Map, HashMap
  
  ■ EL은 수치연산, 관계연산, 논리연산 재공을 한다
  
  ■ EL은 자바스크립트의 메서드도 호출이 가능하다
  
  ■ EL은 표현언어 만의 내장 객체를 제공한다
    pageScope
    requestScope
    sessionScope
    applicationScope
    param -------------- request.getParameter()와 같은 기능
    paramValue --------- request.getParameterValues()와 같다
    initParam ---------- web.xml에서 지정한 초기 파라미터 값을 얻을 때 사용한다
                         application.getInitParameter("name")
    cookie ------------- 쿠키
    pageContext -------- 현재 페이지의  pageContext객체
  
■ 예시
WebContent/el 폴더/test01.jsp

  표현식 : <%= request.getMethod()%>
  표현언어 : ${pageContext.request.method}
  
  표현식 : <%= request.getHeader("host")%>
  표현언어 : ${header.host}
 
 ★★★★★★★ 
  표현식 : <%= session.getAttribute("id")%>
  표현언어 : ${sessionScope.id}
 
  ★★★★★★★ 
  표현식 : <%= request.getAttribute("name")%>
  표현언어 : ${requestScope.name}
  
■ EL연산자

  ▶ 산술연산자 + - * / %
  / 또는 div로도 사용 가능 하지만 몫은 아니다

  ▶ 관계 연산자
  == 또는 eq
  != 또는 ne
  <  또는 lt
  <= 또는 le
  >  또는 gt
  >= 또는 ge
  
  ▶ 논리연산자
  && 또는 and
  || 또는 or
  !  또는 not
  
  ▶ EL 연산자
    빈의 프로퍼티나 Map요소 접근 가능하다
    ${dto.name}
    ${map.name}
    
    [] : 배열
    () : 우선 순위 연산자
    
    조건?A:B --------조건 연산자
    ${조건?A:B}
    
  ▶ true/ false
  null(널문자)는 공백 아니다
  empty : 값이 없는 경우(Map, Collection이 비어 있는지 여부 확인)
  
  실습 : test02.jsp